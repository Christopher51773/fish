Installation and Configuration
==============================

**IMPORTANT CHANGE** From version 4.00 onwards, Fluidinfo
has reverted to its original design behaviour and uses
unix-style paths by default.   See under Credentials for details.

Download
--------

Fish is available from Github at https://github.com/njr0/fish (use the
download button).   The main program is ``fish.py`` in the top
level folder and the ``fish`` script, in scripts.

Install using setup.py with

python setup.py install

as root (or with sudo) if necessary.


Dependencies
------------

If you're running python 2.6, ``fish`` should just run.  However, I
strongly recommend installing version 0.9.2 of Kenneth Reitz's
requests package, which will make it run better.  Requests is
available from PyPI.  With earlier version of python, you need to get
access to ``simplejson`` and ``httplib2``.  You can get simplejson
from http://pypi.python.org/pypi/simplejson/ and httplib2 from
http://code.google.com/p/httplib2/.

If you wish to use Amazon command (for finding about tags for books and music
items from Amazon product pages) you will also need the abouttag
library to be available on your python path.
This is available from http://github.com/njr0/abouttag.




The Fish Python Library and Command Line
----------------------------------------

Fish is a primarily a command line tool for providing access to the
Fluidinfo data store (from Fluidinfo (http://fluidinfo.com/.)
There is lots of coverage of the library (and its evolution) at
http://blog.abouttag.com/.

Fish can also be used as a python library for accessing Fluidinfo, but
it is less complete and less conventional the Ali Afshar's FOM library
(https://launchpad.net/fom), which is generally preferred for
programmatic use.


Credentials
-----------

For many operations, you also need an account on FluidDB,
and credentials (a username and password).   You can get these from

    http://fluidinfo.com/accounts/new

Fish expects your credentials to be available in a two-line file
in the format

username
password

On Unix-like operating systems (including Mac OS X), the default location
for this is ``~/.fluidDBcredentials``.

On windows, the lcoation of the credentials file is specified
by the environment variable ``FDB_CREDENTIALS_FILE``; if that is not
set, the Fish looks for ``c:\fish\credentials.txt``.

You can also optionally add a line, after password, saying either

unix-style-paths true
or unix-style-paths false

(see next section).   If this is not set, unix-style paths will be used.

After you have set them up, it's a good idea to type

fish init

If you want to use multiple Fluidinfo accounts, store extra sets of
credentials in files with an extra extention corresponding to the user name.
For example, if you want to use accounts ``alice`` and ``bob`` store
Alice's credentials in ``~/.fluidDBcredentials.alice`` and Bob's in
``~/.fluidDBcredentials.bob``.   The ``su`` command will then copy
the appropriate set of credentials to ``~/.fluidDBcredentials``.
When operating in this mode, you also have the option of setting
the environment variable ``FISHUSER`` to ``alice`` or ``bob``, and
that will cause Fish to user those credentials.   This allows different
shell instances to use different users, should you need that.

Tag Conventions
---------------

As from version 4.00, Fish uses Unix-style paths by default
(i.e. tag paths without a leading slash are assumed to be in the
authenticated user's namespace; tags for other users need to be
prefixed with  a leading slash).
You can explicitly mandate this also by adding the line
::

    unix-style-paths true

in your credentials file (see above).
If you instead set 
::

    unix-style-paths false

on the third line of the credentials file, Fish uses unix-style paths,
meaning that paths are assumed to be relative to the user's namespace
unless they are introduced with a leading slash.  Also, the about tag
(fluiddb/about) may be referred to as /about.  This affects input and
output.

If you want to overrride this behaviour for a given command,
you can use the ``-U`` flag to specify that the command will use
unix-style paths, or ``-F`` to indicate that it will use fluidinfo-style
paths.


Tests
-----

The library includes a set of tests.   If you have valid credentials,
and everything is OK, these should run successfully if you just execute
the file ``testfish.py`` or say
::

    fish test



See :ref:`fishtest`.


Using the Library
-----------------

Four ways of exploring the library are:

  1. look at the tests (the ones in the class ``TestFluidinfo``)

  2. look at the blog (http://abouttag.blogspot.com)

  3. read the function documentation in the source.

  4. look at and run ``example.py``, which should print DADGAD and 10.


Documentation
-------------

This documentation is included with the release in the ``doc``
subdirectory of with ``doc/build/html/index.html`` being the main
web page.

Delicious
---------

Also distributed with Fish itself is code for accessing delicious.com
(http://del.icio.us/, as was), and for migrating bookmarks and other
data to FluidDB.   This also includes functionality for creating web
homepages from delicious based on a home tag.   See the README-DELICIOUS
file for details on this functionality.


